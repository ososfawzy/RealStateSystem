package ma.oracle.apps.cx.realestate.building.views;

import java.sql.Date;

import ma.oracle.apps.cx.realestate.setup.entities.MAAttachedDocumentsEOImpl;

import oracle.jbo.domain.BlobDomain;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Mar 31 15:48:44 EET 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MABuildingAttachmentImportVORowImpl extends ViewRowImpl {
    public static final int ENTITY_MAATTACHEDDOCUMENTSEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        AttachedDocumentId {
            public Object get(MABuildingAttachmentImportVORowImpl obj) {
                return obj.getAttachedDocumentId();
            }

            public void put(MABuildingAttachmentImportVORowImpl obj, Object value) {
                obj.setAttachedDocumentId((Number) value);
            }
        }
        ,
        EntityName {
            public Object get(MABuildingAttachmentImportVORowImpl obj) {
                return obj.getEntityName();
            }

            public void put(MABuildingAttachmentImportVORowImpl obj, Object value) {
                obj.setEntityName((String) value);
            }
        }
        ,
        FileName {
            public Object get(MABuildingAttachmentImportVORowImpl obj) {
                return obj.getFileName();
            }

            public void put(MABuildingAttachmentImportVORowImpl obj, Object value) {
                obj.setFileName((String) value);
            }
        }
        ,
        FileContentType {
            public Object get(MABuildingAttachmentImportVORowImpl obj) {
                return obj.getFileContentType();
            }

            public void put(MABuildingAttachmentImportVORowImpl obj, Object value) {
                obj.setFileContentType((String) value);
            }
        }
        ,
        UploadDate {
            public Object get(MABuildingAttachmentImportVORowImpl obj) {
                return obj.getUploadDate();
            }

            public void put(MABuildingAttachmentImportVORowImpl obj, Object value) {
                obj.setUploadDate((Date) value);
            }
        }
        ,
        BuildingId {
            public Object get(MABuildingAttachmentImportVORowImpl obj) {
                return obj.getBuildingId();
            }

            public void put(MABuildingAttachmentImportVORowImpl obj, Object value) {
                obj.setBuildingId((String) value);
            }
        }
        ,
        FileData {
            public Object get(MABuildingAttachmentImportVORowImpl obj) {
                return obj.getFileData();
            }

            public void put(MABuildingAttachmentImportVORowImpl obj, Object value) {
                obj.setFileData((BlobDomain) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(MABuildingAttachmentImportVORowImpl object);

        public abstract void put(MABuildingAttachmentImportVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int ATTACHEDDOCUMENTID = AttributesEnum.AttachedDocumentId.index();
    public static final int ENTITYNAME = AttributesEnum.EntityName.index();
    public static final int FILENAME = AttributesEnum.FileName.index();
    public static final int FILECONTENTTYPE = AttributesEnum.FileContentType.index();
    public static final int UPLOADDATE = AttributesEnum.UploadDate.index();
    public static final int BUILDINGID = AttributesEnum.BuildingId.index();
    public static final int FILEDATA = AttributesEnum.FileData.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MABuildingAttachmentImportVORowImpl() {
    }

    /**
     * Gets MAAttachedDocumentsEO entity object.
     * @return the MAAttachedDocumentsEO
     */
    public MAAttachedDocumentsEOImpl getMAAttachedDocumentsEO() {
        return (MAAttachedDocumentsEOImpl) getEntity(ENTITY_MAATTACHEDDOCUMENTSEO);
    }

    /**
     * Gets the attribute value for ATTACHED_DOCUMENT_ID using the alias name AttachedDocumentId.
     * @return the ATTACHED_DOCUMENT_ID
     */
    public Number getAttachedDocumentId() {
        return (Number) getAttributeInternal(ATTACHEDDOCUMENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTACHED_DOCUMENT_ID using the alias name AttachedDocumentId.
     * @param value value to set the ATTACHED_DOCUMENT_ID
     */
    public void setAttachedDocumentId(Number value) {
        setAttributeInternal(ATTACHEDDOCUMENTID, value);
    }

    /**
     * Gets the attribute value for ENTITY_NAME using the alias name EntityName.
     * @return the ENTITY_NAME
     */
    public String getEntityName() {
        return (String) getAttributeInternal(ENTITYNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for ENTITY_NAME using the alias name EntityName.
     * @param value value to set the ENTITY_NAME
     */
    public void setEntityName(String value) {
        setAttributeInternal(ENTITYNAME, value);
    }

    /**
     * Gets the attribute value for FILE_NAME using the alias name FileName.
     * @return the FILE_NAME
     */
    public String getFileName() {
        return (String) getAttributeInternal(FILENAME);
    }

    /**
     * Sets <code>value</code> as attribute value for FILE_NAME using the alias name FileName.
     * @param value value to set the FILE_NAME
     */
    public void setFileName(String value) {
        setAttributeInternal(FILENAME, value);
    }

    /**
     * Gets the attribute value for FILE_CONTENT_TYPE using the alias name FileContentType.
     * @return the FILE_CONTENT_TYPE
     */
    public String getFileContentType() {
        return (String) getAttributeInternal(FILECONTENTTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for FILE_CONTENT_TYPE using the alias name FileContentType.
     * @param value value to set the FILE_CONTENT_TYPE
     */
    public void setFileContentType(String value) {
        setAttributeInternal(FILECONTENTTYPE, value);
    }

    /**
     * Gets the attribute value for UPLOAD_DATE using the alias name UploadDate.
     * @return the UPLOAD_DATE
     */
    public Date getUploadDate() {
        return (Date) getAttributeInternal(UPLOADDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for UPLOAD_DATE using the alias name UploadDate.
     * @param value value to set the UPLOAD_DATE
     */
    public void setUploadDate(Date value) {
        setAttributeInternal(UPLOADDATE, value);
    }

    /**
     * Gets the attribute value for PK1_VALUE using the alias name BuildingId.
     * @return the PK1_VALUE
     */
    public String getBuildingId() {
        return (String) getAttributeInternal(BUILDINGID);
    }

    /**
     * Sets <code>value</code> as attribute value for PK1_VALUE using the alias name BuildingId.
     * @param value value to set the PK1_VALUE
     */
    public void setBuildingId(String value) {
        setAttributeInternal(BUILDINGID, value);
    }

    /**
     * Gets the attribute value for FILE_DATA using the alias name FileData.
     * @return the FILE_DATA
     */
    public BlobDomain getFileData() {
        return (BlobDomain) getAttributeInternal(FILEDATA);
    }

    /**
     * Sets <code>value</code> as attribute value for FILE_DATA using the alias name FileData.
     * @param value value to set the FILE_DATA
     */
    public void setFileData(BlobDomain value) {
        setAttributeInternal(FILEDATA, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}

