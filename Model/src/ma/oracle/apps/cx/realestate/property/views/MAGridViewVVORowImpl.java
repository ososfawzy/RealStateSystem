package ma.oracle.apps.cx.realestate.property.views;

import oracle.jbo.Row;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon May 21 15:40:26 EEST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MAGridViewVVORowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        PropertyId {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getPropertyId();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PropertySegment {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getPropertySegment();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PropertyName {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getPropertyName();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PropertyCountry {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getPropertyCountry();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PropertyCity {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getPropertyCity();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PropertyRegion {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getPropertyRegion();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ParentPropertyId {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getParentPropertyId();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        PropertyLocation {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getPropertyLocation();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        BlockBuldingName {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getBlockBuldingName();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SubPropertySegment {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getSubPropertySegment();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SubPropertyName {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getSubPropertyName();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ParentTypeName {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getParentTypeName();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        SubTypeName {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getSubTypeName();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        OccupationStatus {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getOccupationStatus();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        StartDate {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getStartDate();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        EndDate {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getEndDate();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        ServiceEndDate {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getServiceEndDate();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MARealEstatePropertySearchVVO {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getMARealEstatePropertySearchVVO();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MARealEstateParentPropertySearchVVO {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getMARealEstateParentPropertySearchVVO();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MABlockBuildingNameVVO1 {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getMABlockBuildingNameVVO1();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MAFloorNumberVVO1 {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getMAFloorNumberVVO1();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MAOwnerVVO1 {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getMAOwnerVVO1();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MAPropertyDuplexVVO1 {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getMAPropertyDuplexVVO1();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MAPropertyStatusVVO1 {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getMAPropertyStatusVVO1();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MARealEstatepropertyparentVVO1 {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getMARealEstatepropertyparentVVO1();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MARealEstatePropertySubTypesVVO1 {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getMARealEstatePropertySubTypesVVO1();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MARealEstatePropertyTypesVVO1 {
            public Object get(MAGridViewVVORowImpl obj) {
                return obj.getMARealEstatePropertyTypesVVO1();
            }

            public void put(MAGridViewVVORowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(MAGridViewVVORowImpl object);

        public abstract void put(MAGridViewVVORowImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PROPERTYID = AttributesEnum.PropertyId.index();
    public static final int PROPERTYSEGMENT = AttributesEnum.PropertySegment.index();
    public static final int PROPERTYNAME = AttributesEnum.PropertyName.index();
    public static final int PROPERTYCOUNTRY = AttributesEnum.PropertyCountry.index();
    public static final int PROPERTYCITY = AttributesEnum.PropertyCity.index();
    public static final int PROPERTYREGION = AttributesEnum.PropertyRegion.index();
    public static final int PARENTPROPERTYID = AttributesEnum.ParentPropertyId.index();
    public static final int PROPERTYLOCATION = AttributesEnum.PropertyLocation.index();
    public static final int BLOCKBULDINGNAME = AttributesEnum.BlockBuldingName.index();
    public static final int SUBPROPERTYSEGMENT = AttributesEnum.SubPropertySegment.index();
    public static final int SUBPROPERTYNAME = AttributesEnum.SubPropertyName.index();
    public static final int PARENTTYPENAME = AttributesEnum.ParentTypeName.index();
    public static final int SUBTYPENAME = AttributesEnum.SubTypeName.index();
    public static final int OCCUPATIONSTATUS = AttributesEnum.OccupationStatus.index();
    public static final int STARTDATE = AttributesEnum.StartDate.index();
    public static final int ENDDATE = AttributesEnum.EndDate.index();
    public static final int SERVICEENDDATE = AttributesEnum.ServiceEndDate.index();
    public static final int MAREALESTATEPROPERTYSEARCHVVO = AttributesEnum.MARealEstatePropertySearchVVO.index();
    public static final int MAREALESTATEPARENTPROPERTYSEARCHVVO =
        AttributesEnum.MARealEstateParentPropertySearchVVO.index();
    public static final int MABLOCKBUILDINGNAMEVVO1 = AttributesEnum.MABlockBuildingNameVVO1.index();
    public static final int MAFLOORNUMBERVVO1 = AttributesEnum.MAFloorNumberVVO1.index();
    public static final int MAOWNERVVO1 = AttributesEnum.MAOwnerVVO1.index();
    public static final int MAPROPERTYDUPLEXVVO1 = AttributesEnum.MAPropertyDuplexVVO1.index();
    public static final int MAPROPERTYSTATUSVVO1 = AttributesEnum.MAPropertyStatusVVO1.index();
    public static final int MAREALESTATEPROPERTYPARENTVVO1 = AttributesEnum.MARealEstatepropertyparentVVO1.index();
    public static final int MAREALESTATEPROPERTYSUBTYPESVVO1 = AttributesEnum.MARealEstatePropertySubTypesVVO1.index();
    public static final int MAREALESTATEPROPERTYTYPESVVO1 = AttributesEnum.MARealEstatePropertyTypesVVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MAGridViewVVORowImpl() {
    }

    /**
     * Gets the attribute value for the calculated attribute PropertyId.
     * @return the PropertyId
     */
    public Number getPropertyId() {
        return (Number) getAttributeInternal(PROPERTYID);
    }


    /**
     * Gets the attribute value for the calculated attribute PropertySegment.
     * @return the PropertySegment
     */
    public String getPropertySegment() {
        return (String) getAttributeInternal(PROPERTYSEGMENT);
    }


    /**
     * Gets the attribute value for the calculated attribute PropertyName.
     * @return the PropertyName
     */
    public String getPropertyName() {
        return (String) getAttributeInternal(PROPERTYNAME);
    }


    /**
     * Gets the attribute value for the calculated attribute PropertyCountry.
     * @return the PropertyCountry
     */
    public String getPropertyCountry() {
        return (String) getAttributeInternal(PROPERTYCOUNTRY);
    }


    /**
     * Gets the attribute value for the calculated attribute PropertyCity.
     * @return the PropertyCity
     */
    public String getPropertyCity() {
        return (String) getAttributeInternal(PROPERTYCITY);
    }


    /**
     * Gets the attribute value for the calculated attribute PropertyRegion.
     * @return the PropertyRegion
     */
    public String getPropertyRegion() {
        return (String) getAttributeInternal(PROPERTYREGION);
    }


    /**
     * Gets the attribute value for the calculated attribute ParentPropertyId.
     * @return the ParentPropertyId
     */
    public Number getParentPropertyId() {
        return (Number) getAttributeInternal(PARENTPROPERTYID);
    }


    /**
     * Gets the attribute value for the calculated attribute PropertyLocation.
     * @return the PropertyLocation
     */
    public String getPropertyLocation() {
        return (String) getAttributeInternal(PROPERTYLOCATION);
    }


    /**
     * Gets the attribute value for the calculated attribute BlockBuldingName.
     * @return the BlockBuldingName
     */
    public String getBlockBuldingName() {
        return (String) getAttributeInternal(BLOCKBULDINGNAME);
    }


    /**
     * Gets the attribute value for the calculated attribute SubPropertySegment.
     * @return the SubPropertySegment
     */
    public String getSubPropertySegment() {
        return (String) getAttributeInternal(SUBPROPERTYSEGMENT);
    }


    /**
     * Gets the attribute value for the calculated attribute SubPropertyName.
     * @return the SubPropertyName
     */
    public String getSubPropertyName() {
        return (String) getAttributeInternal(SUBPROPERTYNAME);
    }


    /**
     * Gets the attribute value for the calculated attribute ParentTypeName.
     * @return the ParentTypeName
     */
    public String getParentTypeName() {
        return (String) getAttributeInternal(PARENTTYPENAME);
    }


    /**
     * Gets the attribute value for the calculated attribute SubTypeName.
     * @return the SubTypeName
     */
    public String getSubTypeName() {
        return (String) getAttributeInternal(SUBTYPENAME);
    }


    /**
     * Gets the attribute value for the calculated attribute OccupationStatus.
     * @return the OccupationStatus
     */
    public String getOccupationStatus() {
        return (String) getAttributeInternal(OCCUPATIONSTATUS);
    }


    /**
     * Gets the attribute value for the calculated attribute StartDate.
     * @return the StartDate
     */
    public Date getStartDate() {
        return (Date) getAttributeInternal(STARTDATE);
    }


    /**
     * Gets the attribute value for the calculated attribute EndDate.
     * @return the EndDate
     */
    public Date getEndDate() {
        return (Date) getAttributeInternal(ENDDATE);
    }


    /**
     * Gets the attribute value for the calculated attribute ServiceEndDate.
     * @return the ServiceEndDate
     */
    public Date getServiceEndDate() {
        return (Date) getAttributeInternal(SERVICEENDDATE);
    }


    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MARealEstatePropertySearchVVO.
     */
    public RowIterator getMARealEstatePropertySearchVVO() {
        return (RowIterator)getAttributeInternal(MAREALESTATEPROPERTYSEARCHVVO);
    }


    /**
     * Sets the master-detail link MARealEstatePropertySearchVVO between this object and <code>value</code>.
     */
    public void setMARealEstatePropertySearchVVO(Row value) {
        setAttributeInternal(MAREALESTATEPROPERTYSEARCHVVO, value);
    }


    /**
     * Gets the associated <code>Row</code> using master-detail link MARealEstateParentPropertySearchVVO.
     */
    public Row getMARealEstateParentPropertySearchVVO() {
        return (Row)getAttributeInternal(MAREALESTATEPARENTPROPERTYSEARCHVVO);
    }

    /**
     * Sets the master-detail link MARealEstateParentPropertySearchVVO between this object and <code>value</code>.
     */
    public void setMARealEstateParentPropertySearchVVO(Row value) {
        setAttributeInternal(MAREALESTATEPARENTPROPERTYSEARCHVVO, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MABlockBuildingNameVVO1.
     */
    public RowSet getMABlockBuildingNameVVO1() {
        return (RowSet)getAttributeInternal(MABLOCKBUILDINGNAMEVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MAFloorNumberVVO1.
     */
    public RowSet getMAFloorNumberVVO1() {
        return (RowSet)getAttributeInternal(MAFLOORNUMBERVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MAOwnerVVO1.
     */
    public RowSet getMAOwnerVVO1() {
        return (RowSet)getAttributeInternal(MAOWNERVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MAPropertyDuplexVVO1.
     */
    public RowSet getMAPropertyDuplexVVO1() {
        return (RowSet)getAttributeInternal(MAPROPERTYDUPLEXVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MAPropertyStatusVVO1.
     */
    public RowSet getMAPropertyStatusVVO1() {
        return (RowSet)getAttributeInternal(MAPROPERTYSTATUSVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MARealEstatepropertyparentVVO1.
     */
    public RowSet getMARealEstatepropertyparentVVO1() {
        return (RowSet)getAttributeInternal(MAREALESTATEPROPERTYPARENTVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MARealEstatePropertySubTypesVVO1.
     */
    public RowSet getMARealEstatePropertySubTypesVVO1() {
        return (RowSet)getAttributeInternal(MAREALESTATEPROPERTYSUBTYPESVVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> MARealEstatePropertyTypesVVO1.
     */
    public RowSet getMARealEstatePropertyTypesVVO1() {
        return (RowSet)getAttributeInternal(MAREALESTATEPROPERTYTYPESVVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
