package ma.oracle.apps.cx.realestate.property.entities;


import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun May 06 19:28:37 EEST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MARealEstatePropertyEOImpl extends EntityImpl {

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        PropertyId {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getPropertyId();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setPropertyId((Number) value);
            }
        }
        ,
        PropertySegment {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getPropertySegment();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setPropertySegment((String) value);
            }
        }
        ,
        PropertyName {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getPropertyName();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setPropertyName((String) value);
            }
        }
        ,
        BlockBuldingName {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getBlockBuldingName();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setBlockBuldingName((String) value);
            }
        }
        ,
        FloorNumber {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getFloorNumber();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setFloorNumber((String) value);
            }
        }
        ,
        PropertyStatus {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getPropertyStatus();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setPropertyStatus((String) value);
            }
        }
        ,
        StartDate {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getStartDate();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setStartDate((Date) value);
            }
        }
        ,
        EndDate {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getEndDate();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setEndDate((Date) value);
            }
        }
        ,
        AvailableForRentFlag {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getAvailableForRentFlag();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setAvailableForRentFlag((String) value);
            }
        }
        ,
        UnitNumber {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getUnitNumber();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setUnitNumber((String) value);
            }
        }
        ,
        UnitSqMt {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getUnitSqMt();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setUnitSqMt((String) value);
            }
        }
        ,
        NumberOfRooms {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getNumberOfRooms();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setNumberOfRooms((Number) value);
            }
        }
        ,
        NumberOfBathrooms {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getNumberOfBathrooms();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setNumberOfBathrooms((Number) value);
            }
        }
        ,
        NumberOfParkings {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getNumberOfParkings();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setNumberOfParkings((Number) value);
            }
        }
        ,
        DuplexFlag {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getDuplexFlag();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setDuplexFlag((String) value);
            }
        }
        ,
        RentAmount {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getRentAmount();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setRentAmount((Number) value);
            }
        }
        ,
        Comments {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getComments();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setComments((String) value);
            }
        }
        ,
        LastLeasedAmount {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getLastLeasedAmount();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setLastLeasedAmount((Number) value);
            }
        }
        ,
        LocationX {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getLocationX();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setLocationX((String) value);
            }
        }
        ,
        LocationY {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getLocationY();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setLocationY((String) value);
            }
        }
        ,
        PropertyCountry {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getPropertyCountry();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setPropertyCountry((String) value);
            }
        }
        ,
        PropertyCity {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getPropertyCity();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setPropertyCity((String) value);
            }
        }
        ,
        PropertyRegion {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getPropertyRegion();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setPropertyRegion((String) value);
            }
        }
        ,
        ContractId {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getContractId();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setContractId((Number) value);
            }
        }
        ,
        IsDeletedFlag {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getIsDeletedFlag();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setIsDeletedFlag((String) value);
            }
        }
        ,
        PropertySite {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getPropertySite();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setPropertySite((String) value);
            }
        }
        ,
        CreatedBy {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setCreatedBy((Number) value);
            }
        }
        ,
        CreationDate {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getCreationDate();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setCreationDate((Date) value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setLastUpdatedBy((Number) value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setLastUpdateDate((Date) value);
            }
        }
        ,
        LastUpdateLogin {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getLastUpdateLogin();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setLastUpdateLogin((Number) value);
            }
        }
        ,
        AttributeCategory {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getAttributeCategory();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setAttributeCategory((String) value);
            }
        }
        ,
        Attribute1 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getAttribute1();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setAttribute1((String) value);
            }
        }
        ,
        Attribute2 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getAttribute2();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setAttribute2((String) value);
            }
        }
        ,
        Attribute3 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getAttribute3();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setAttribute3((String) value);
            }
        }
        ,
        Attribute4 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getAttribute4();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setAttribute4((String) value);
            }
        }
        ,
        Attribute5 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getAttribute5();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setAttribute5((String) value);
            }
        }
        ,
        Attribute6 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getAttribute6();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setAttribute6((String) value);
            }
        }
        ,
        Attribute7 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getAttribute7();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setAttribute7((String) value);
            }
        }
        ,
        Attribute8 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getAttribute8();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setAttribute8((String) value);
            }
        }
        ,
        Attribute9 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getAttribute9();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setAttribute9((String) value);
            }
        }
        ,
        Attribute10 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getAttribute10();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setAttribute10((String) value);
            }
        }
        ,
        Attribute11 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getAttribute11();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setAttribute11((String) value);
            }
        }
        ,
        Attribute12 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getAttribute12();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setAttribute12((String) value);
            }
        }
        ,
        Attribute13 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getAttribute13();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setAttribute13((String) value);
            }
        }
        ,
        Attribute14 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getAttribute14();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setAttribute14((String) value);
            }
        }
        ,
        Attribute15 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getAttribute15();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setAttribute15((String) value);
            }
        }
        ,
        ExtAttributeCategory {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getExtAttributeCategory();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setExtAttributeCategory((String) value);
            }
        }
        ,
        ExtAttribute1 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getExtAttribute1();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setExtAttribute1((String) value);
            }
        }
        ,
        ExtAttribute2 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getExtAttribute2();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setExtAttribute2((String) value);
            }
        }
        ,
        ExtAttribute3 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getExtAttribute3();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setExtAttribute3((String) value);
            }
        }
        ,
        ExtAttribute4 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getExtAttribute4();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setExtAttribute4((String) value);
            }
        }
        ,
        ExtAttribute5 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getExtAttribute5();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setExtAttribute5((String) value);
            }
        }
        ,
        ExtAttribute6 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getExtAttribute6();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setExtAttribute6((String) value);
            }
        }
        ,
        ExtAttribute7 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getExtAttribute7();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setExtAttribute7((String) value);
            }
        }
        ,
        ExtAttribute8 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getExtAttribute8();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setExtAttribute8((String) value);
            }
        }
        ,
        ExtAttribute9 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getExtAttribute9();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setExtAttribute9((String) value);
            }
        }
        ,
        ExtAttribute10 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getExtAttribute10();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setExtAttribute10((String) value);
            }
        }
        ,
        ExtAttribute11 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getExtAttribute11();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setExtAttribute11((String) value);
            }
        }
        ,
        ExtAttribute12 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getExtAttribute12();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setExtAttribute12((String) value);
            }
        }
        ,
        ExtAttribute13 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getExtAttribute13();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setExtAttribute13((String) value);
            }
        }
        ,
        ExtAttribute14 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getExtAttribute14();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setExtAttribute14((String) value);
            }
        }
        ,
        ExtAttribute15 {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getExtAttribute15();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setExtAttribute15((String) value);
            }
        }
        ,
        ParentPropertyId {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getParentPropertyId();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setParentPropertyId((Number) value);
            }
        }
        ,
        TypeId {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getTypeId();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setTypeId((Number) value);
            }
        }
        ,
        ParentTypeId {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getParentTypeId();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setParentTypeId((Number) value);
            }
        }
        ,
        PropertyPrice {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getPropertyPrice();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setPropertyPrice((Number) value);
            }
        }
        ,
        PropertyCode {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getPropertyCode();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setPropertyCode((String) value);
            }
        }
        ,
        PropertyActivity {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getPropertyActivity();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setPropertyActivity((String) value);
            }
        }
        ,
        PropertyPattern {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getPropertyPattern();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setPropertyPattern((String) value);
            }
        }
        ,
        Status {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getStatus();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setStatus((String) value);
            }
        }
        ,
        ElectricMeter {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getElectricMeter();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setElectricMeter((String) value);
            }
        }
        ,
        WaterMeter {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getWaterMeter();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setWaterMeter((String) value);
            }
        }
        ,
        EstimatedDeliveryDate {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getEstimatedDeliveryDate();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setEstimatedDeliveryDate((Date) value);
            }
        }
        ,
        FurnishedFlag {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getFurnishedFlag();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setFurnishedFlag((String) value);
            }
        }
        ,
        AcFlag {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getAcFlag();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setAcFlag((String) value);
            }
        }
        ,
        BuildingId {
            public Object get(MARealEstatePropertyEOImpl obj) {
                return obj.getBuildingId();
            }

            public void put(MARealEstatePropertyEOImpl obj, Object value) {
                obj.setBuildingId((Number) value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public abstract Object get(MARealEstatePropertyEOImpl object);

        public abstract void put(MARealEstatePropertyEOImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int PROPERTYID = AttributesEnum.PropertyId.index();
    public static final int PROPERTYSEGMENT = AttributesEnum.PropertySegment.index();
    public static final int PROPERTYNAME = AttributesEnum.PropertyName.index();
    public static final int BLOCKBULDINGNAME = AttributesEnum.BlockBuldingName.index();
    public static final int FLOORNUMBER = AttributesEnum.FloorNumber.index();
    public static final int PROPERTYSTATUS = AttributesEnum.PropertyStatus.index();
    public static final int STARTDATE = AttributesEnum.StartDate.index();
    public static final int ENDDATE = AttributesEnum.EndDate.index();
    public static final int AVAILABLEFORRENTFLAG = AttributesEnum.AvailableForRentFlag.index();
    public static final int UNITNUMBER = AttributesEnum.UnitNumber.index();
    public static final int UNITSQMT = AttributesEnum.UnitSqMt.index();
    public static final int NUMBEROFROOMS = AttributesEnum.NumberOfRooms.index();
    public static final int NUMBEROFBATHROOMS = AttributesEnum.NumberOfBathrooms.index();
    public static final int NUMBEROFPARKINGS = AttributesEnum.NumberOfParkings.index();
    public static final int DUPLEXFLAG = AttributesEnum.DuplexFlag.index();
    public static final int RENTAMOUNT = AttributesEnum.RentAmount.index();
    public static final int COMMENTS = AttributesEnum.Comments.index();
    public static final int LASTLEASEDAMOUNT = AttributesEnum.LastLeasedAmount.index();
    public static final int LOCATIONX = AttributesEnum.LocationX.index();
    public static final int LOCATIONY = AttributesEnum.LocationY.index();
    public static final int PROPERTYCOUNTRY = AttributesEnum.PropertyCountry.index();
    public static final int PROPERTYCITY = AttributesEnum.PropertyCity.index();
    public static final int PROPERTYREGION = AttributesEnum.PropertyRegion.index();
    public static final int CONTRACTID = AttributesEnum.ContractId.index();
    public static final int ISDELETEDFLAG = AttributesEnum.IsDeletedFlag.index();
    public static final int PROPERTYSITE = AttributesEnum.PropertySite.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATELOGIN = AttributesEnum.LastUpdateLogin.index();
    public static final int ATTRIBUTECATEGORY = AttributesEnum.AttributeCategory.index();
    public static final int ATTRIBUTE1 = AttributesEnum.Attribute1.index();
    public static final int ATTRIBUTE2 = AttributesEnum.Attribute2.index();
    public static final int ATTRIBUTE3 = AttributesEnum.Attribute3.index();
    public static final int ATTRIBUTE4 = AttributesEnum.Attribute4.index();
    public static final int ATTRIBUTE5 = AttributesEnum.Attribute5.index();
    public static final int ATTRIBUTE6 = AttributesEnum.Attribute6.index();
    public static final int ATTRIBUTE7 = AttributesEnum.Attribute7.index();
    public static final int ATTRIBUTE8 = AttributesEnum.Attribute8.index();
    public static final int ATTRIBUTE9 = AttributesEnum.Attribute9.index();
    public static final int ATTRIBUTE10 = AttributesEnum.Attribute10.index();
    public static final int ATTRIBUTE11 = AttributesEnum.Attribute11.index();
    public static final int ATTRIBUTE12 = AttributesEnum.Attribute12.index();
    public static final int ATTRIBUTE13 = AttributesEnum.Attribute13.index();
    public static final int ATTRIBUTE14 = AttributesEnum.Attribute14.index();
    public static final int ATTRIBUTE15 = AttributesEnum.Attribute15.index();
    public static final int EXTATTRIBUTECATEGORY = AttributesEnum.ExtAttributeCategory.index();
    public static final int EXTATTRIBUTE1 = AttributesEnum.ExtAttribute1.index();
    public static final int EXTATTRIBUTE2 = AttributesEnum.ExtAttribute2.index();
    public static final int EXTATTRIBUTE3 = AttributesEnum.ExtAttribute3.index();
    public static final int EXTATTRIBUTE4 = AttributesEnum.ExtAttribute4.index();
    public static final int EXTATTRIBUTE5 = AttributesEnum.ExtAttribute5.index();
    public static final int EXTATTRIBUTE6 = AttributesEnum.ExtAttribute6.index();
    public static final int EXTATTRIBUTE7 = AttributesEnum.ExtAttribute7.index();
    public static final int EXTATTRIBUTE8 = AttributesEnum.ExtAttribute8.index();
    public static final int EXTATTRIBUTE9 = AttributesEnum.ExtAttribute9.index();
    public static final int EXTATTRIBUTE10 = AttributesEnum.ExtAttribute10.index();
    public static final int EXTATTRIBUTE11 = AttributesEnum.ExtAttribute11.index();
    public static final int EXTATTRIBUTE12 = AttributesEnum.ExtAttribute12.index();
    public static final int EXTATTRIBUTE13 = AttributesEnum.ExtAttribute13.index();
    public static final int EXTATTRIBUTE14 = AttributesEnum.ExtAttribute14.index();
    public static final int EXTATTRIBUTE15 = AttributesEnum.ExtAttribute15.index();
    public static final int PARENTPROPERTYID = AttributesEnum.ParentPropertyId.index();
    public static final int TYPEID = AttributesEnum.TypeId.index();
    public static final int PARENTTYPEID = AttributesEnum.ParentTypeId.index();
    public static final int PROPERTYPRICE = AttributesEnum.PropertyPrice.index();
    public static final int PROPERTYCODE = AttributesEnum.PropertyCode.index();
    public static final int PROPERTYACTIVITY = AttributesEnum.PropertyActivity.index();
    public static final int PROPERTYPATTERN = AttributesEnum.PropertyPattern.index();
    public static final int STATUS = AttributesEnum.Status.index();
    public static final int ELECTRICMETER = AttributesEnum.ElectricMeter.index();
    public static final int WATERMETER = AttributesEnum.WaterMeter.index();
    public static final int ESTIMATEDDELIVERYDATE = AttributesEnum.EstimatedDeliveryDate.index();
    public static final int FURNISHEDFLAG = AttributesEnum.FurnishedFlag.index();
    public static final int ACFLAG = AttributesEnum.AcFlag.index();
    public static final int BUILDINGID = AttributesEnum.BuildingId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MARealEstatePropertyEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("ma.oracle.apps.cx.realestate.property.entities.MARealEstatePropertyEO");
    }


    /**
     * Gets the attribute value for PropertyId, using the alias name PropertyId.
     * @return the PropertyId
     */
    public Number getPropertyId() {
        return (Number) getAttributeInternal(PROPERTYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for PropertyId.
     * @param value value to set the PropertyId
     */
    public void setPropertyId(Number value) {
        setAttributeInternal(PROPERTYID, value);
    }

    /**
     * Gets the attribute value for PropertySegment, using the alias name PropertySegment.
     * @return the PropertySegment
     */
    public String getPropertySegment() {
        return (String)getAttributeInternal(PROPERTYSEGMENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PropertySegment.
     * @param value value to set the PropertySegment
     */
    public void setPropertySegment(String value) {
        setAttributeInternal(PROPERTYSEGMENT, value);
    }

    /**
     * Gets the attribute value for PropertyName, using the alias name PropertyName.
     * @return the PropertyName
     */
    public String getPropertyName() {
        return (String)getAttributeInternal(PROPERTYNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for PropertyName.
     * @param value value to set the PropertyName
     */
    public void setPropertyName(String value) {
        setAttributeInternal(PROPERTYNAME, value);
    }

    /**
     * Gets the attribute value for BlockBuldingName, using the alias name BlockBuldingName.
     * @return the BlockBuldingName
     */
    public String getBlockBuldingName() {
        return (String)getAttributeInternal(BLOCKBULDINGNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for BlockBuldingName.
     * @param value value to set the BlockBuldingName
     */
    public void setBlockBuldingName(String value) {
        setAttributeInternal(BLOCKBULDINGNAME, value);
    }


    /**
     * Gets the attribute value for FloorNumber, using the alias name FloorNumber.
     * @return the FloorNumber
     */
    public String getFloorNumber() {
        return (String)getAttributeInternal(FLOORNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for FloorNumber.
     * @param value value to set the FloorNumber
     */
    public void setFloorNumber(String value) {
        setAttributeInternal(FLOORNUMBER, value);
    }

    /**
     * Gets the attribute value for PropertyStatus, using the alias name PropertyStatus.
     * @return the PropertyStatus
     */
    public String getPropertyStatus() {
        return (String)getAttributeInternal(PROPERTYSTATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for PropertyStatus.
     * @param value value to set the PropertyStatus
     */
    public void setPropertyStatus(String value) {
        setAttributeInternal(PROPERTYSTATUS, value);
    }

    /**
     * Gets the attribute value for StartDate, using the alias name StartDate.
     * @return the StartDate
     */
    public java.sql.Date getStartDate() {
        return (java.sql.Date) getAttributeInternal(STARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StartDate.
     * @param value value to set the StartDate
     */
    public void setStartDate(Date value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**
     * Gets the attribute value for EndDate, using the alias name EndDate.
     * @return the EndDate
     */
    public Date getEndDate() {
        return (Date) getAttributeInternal(ENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndDate.
     * @param value value to set the EndDate
     */
    public void setEndDate(Date value) {
        setAttributeInternal(ENDDATE, value);
    }

    /**
     * Gets the attribute value for AvailableForRentFlag, using the alias name AvailableForRentFlag.
     * @return the AvailableForRentFlag
     */
    public String getAvailableForRentFlag() {
        return (String)getAttributeInternal(AVAILABLEFORRENTFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for AvailableForRentFlag.
     * @param value value to set the AvailableForRentFlag
     */
    public void setAvailableForRentFlag(String value) {
        setAttributeInternal(AVAILABLEFORRENTFLAG, value);
    }

    /**
     * Gets the attribute value for UnitNumber, using the alias name UnitNumber.
     * @return the UnitNumber
     */
    public String getUnitNumber() {
        return (String)getAttributeInternal(UNITNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for UnitNumber.
     * @param value value to set the UnitNumber
     */
    public void setUnitNumber(String value) {
        setAttributeInternal(UNITNUMBER, value);
    }

    /**
     * Gets the attribute value for UnitSqMt, using the alias name UnitSqMt.
     * @return the UnitSqMt
     */
    public String getUnitSqMt() {
        return (String)getAttributeInternal(UNITSQMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for UnitSqMt.
     * @param value value to set the UnitSqMt
     */
    public void setUnitSqMt(String value) {
        setAttributeInternal(UNITSQMT, value);
    }

    /**
     * Gets the attribute value for NumberOfRooms, using the alias name NumberOfRooms.
     * @return the NumberOfRooms
     */
    public Number getNumberOfRooms() {
        return (Number) getAttributeInternal(NUMBEROFROOMS);
    }

    /**
     * Sets <code>value</code> as the attribute value for NumberOfRooms.
     * @param value value to set the NumberOfRooms
     */
    public void setNumberOfRooms(Number value) {
        setAttributeInternal(NUMBEROFROOMS, value);
    }

    /**
     * Gets the attribute value for NumberOfBathrooms, using the alias name NumberOfBathrooms.
     * @return the NumberOfBathrooms
     */
    public Number getNumberOfBathrooms() {
        return (Number) getAttributeInternal(NUMBEROFBATHROOMS);
    }

    /**
     * Sets <code>value</code> as the attribute value for NumberOfBathrooms.
     * @param value value to set the NumberOfBathrooms
     */
    public void setNumberOfBathrooms(Number value) {
        setAttributeInternal(NUMBEROFBATHROOMS, value);
    }

    /**
     * Gets the attribute value for NumberOfParkings, using the alias name NumberOfParkings.
     * @return the NumberOfParkings
     */
    public Number getNumberOfParkings() {
        return (Number) getAttributeInternal(NUMBEROFPARKINGS);
    }

    /**
     * Sets <code>value</code> as the attribute value for NumberOfParkings.
     * @param value value to set the NumberOfParkings
     */
    public void setNumberOfParkings(Number value) {
        setAttributeInternal(NUMBEROFPARKINGS, value);
    }

    /**
     * Gets the attribute value for DuplexFlag, using the alias name DuplexFlag.
     * @return the DuplexFlag
     */
    public String getDuplexFlag() {
        return (String)getAttributeInternal(DUPLEXFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for DuplexFlag.
     * @param value value to set the DuplexFlag
     */
    public void setDuplexFlag(String value) {
        setAttributeInternal(DUPLEXFLAG, value);
    }

    /**
     * Gets the attribute value for RentAmount, using the alias name RentAmount.
     * @return the RentAmount
     */
    public Number getRentAmount() {
        return (Number) getAttributeInternal(RENTAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for RentAmount.
     * @param value value to set the RentAmount
     */
    public void setRentAmount(Number value) {
        setAttributeInternal(RENTAMOUNT, value);
    }

    /**
     * Gets the attribute value for Comments, using the alias name Comments.
     * @return the Comments
     */
    public String getComments() {
        return (String)getAttributeInternal(COMMENTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Comments.
     * @param value value to set the Comments
     */
    public void setComments(String value) {
        setAttributeInternal(COMMENTS, value);
    }

    /**
     * Gets the attribute value for LastLeasedAmount, using the alias name LastLeasedAmount.
     * @return the LastLeasedAmount
     */
    public Number getLastLeasedAmount() {
        return (Number) getAttributeInternal(LASTLEASEDAMOUNT);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastLeasedAmount.
     * @param value value to set the LastLeasedAmount
     */
    public void setLastLeasedAmount(Number value) {
        setAttributeInternal(LASTLEASEDAMOUNT, value);
    }

    /**
     * Gets the attribute value for LocationX, using the alias name LocationX.
     * @return the LocationX
     */
    public String getLocationX() {
        return (String)getAttributeInternal(LOCATIONX);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocationX.
     * @param value value to set the LocationX
     */
    public void setLocationX(String value) {
        setAttributeInternal(LOCATIONX, value);
    }

    /**
     * Gets the attribute value for LocationY, using the alias name LocationY.
     * @return the LocationY
     */
    public String getLocationY() {
        return (String)getAttributeInternal(LOCATIONY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LocationY.
     * @param value value to set the LocationY
     */
    public void setLocationY(String value) {
        setAttributeInternal(LOCATIONY, value);
    }

    /**
     * Gets the attribute value for PropertyCountry, using the alias name PropertyCountry.
     * @return the PropertyCountry
     */
    public String getPropertyCountry() {
        return (String)getAttributeInternal(PROPERTYCOUNTRY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PropertyCountry.
     * @param value value to set the PropertyCountry
     */
    public void setPropertyCountry(String value) {
        setAttributeInternal(PROPERTYCOUNTRY, value);
    }

    /**
     * Gets the attribute value for PropertyCity, using the alias name PropertyCity.
     * @return the PropertyCity
     */
    public String getPropertyCity() {
        return (String)getAttributeInternal(PROPERTYCITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PropertyCity.
     * @param value value to set the PropertyCity
     */
    public void setPropertyCity(String value) {
        setAttributeInternal(PROPERTYCITY, value);
    }

    /**
     * Gets the attribute value for PropertyRegion, using the alias name PropertyRegion.
     * @return the PropertyRegion
     */
    public String getPropertyRegion() {
        return (String)getAttributeInternal(PROPERTYREGION);
    }

    /**
     * Sets <code>value</code> as the attribute value for PropertyRegion.
     * @param value value to set the PropertyRegion
     */
    public void setPropertyRegion(String value) {
        setAttributeInternal(PROPERTYREGION, value);
    }

    /**
     * Gets the attribute value for ContractId, using the alias name ContractId.
     * @return the ContractId
     */
    public Number getContractId() {
        return (Number) getAttributeInternal(CONTRACTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ContractId.
     * @param value value to set the ContractId
     */
    public void setContractId(Number value) {
        setAttributeInternal(CONTRACTID, value);
    }

    /**
     * Gets the attribute value for IsDeletedFlag, using the alias name IsDeletedFlag.
     * @return the IsDeletedFlag
     */
    public String getIsDeletedFlag() {
        return (String)getAttributeInternal(ISDELETEDFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for IsDeletedFlag.
     * @param value value to set the IsDeletedFlag
     */
    public void setIsDeletedFlag(String value) {
        setAttributeInternal(ISDELETEDFLAG, value);
    }

    /**
     * Gets the attribute value for PropertySite, using the alias name PropertySite.
     * @return the PropertySite
     */
    public String getPropertySite() {
        return (String)getAttributeInternal(PROPERTYSITE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PropertySite.
     * @param value value to set the PropertySite
     */
    public void setPropertySite(String value) {
        setAttributeInternal(PROPERTYSITE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date) getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin.
     * @return the LastUpdateLogin
     */
    public Number getLastUpdateLogin() {
        return (Number) getAttributeInternal(LASTUPDATELOGIN);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateLogin.
     * @param value value to set the LastUpdateLogin
     */
    public void setLastUpdateLogin(Number value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**
     * Gets the attribute value for AttributeCategory, using the alias name AttributeCategory.
     * @return the AttributeCategory
     */
    public String getAttributeCategory() {
        return (String)getAttributeInternal(ATTRIBUTECATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttributeCategory.
     * @param value value to set the AttributeCategory
     */
    public void setAttributeCategory(String value) {
        setAttributeInternal(ATTRIBUTECATEGORY, value);
    }

    /**
     * Gets the attribute value for Attribute1, using the alias name Attribute1.
     * @return the Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute1.
     * @param value value to set the Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for Attribute2, using the alias name Attribute2.
     * @return the Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute2.
     * @param value value to set the Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for Attribute3, using the alias name Attribute3.
     * @return the Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute3.
     * @param value value to set the Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for Attribute4, using the alias name Attribute4.
     * @return the Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute4.
     * @param value value to set the Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for Attribute5, using the alias name Attribute5.
     * @return the Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute5.
     * @param value value to set the Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for Attribute6, using the alias name Attribute6.
     * @return the Attribute6
     */
    public String getAttribute6() {
        return (String)getAttributeInternal(ATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute6.
     * @param value value to set the Attribute6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for Attribute7, using the alias name Attribute7.
     * @return the Attribute7
     */
    public String getAttribute7() {
        return (String)getAttributeInternal(ATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute7.
     * @param value value to set the Attribute7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for Attribute8, using the alias name Attribute8.
     * @return the Attribute8
     */
    public String getAttribute8() {
        return (String)getAttributeInternal(ATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute8.
     * @param value value to set the Attribute8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for Attribute9, using the alias name Attribute9.
     * @return the Attribute9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute9.
     * @param value value to set the Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for Attribute10, using the alias name Attribute10.
     * @return the Attribute10
     */
    public String getAttribute10() {
        return (String)getAttributeInternal(ATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute10.
     * @param value value to set the Attribute10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for Attribute11, using the alias name Attribute11.
     * @return the Attribute11
     */
    public String getAttribute11() {
        return (String)getAttributeInternal(ATTRIBUTE11);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute11.
     * @param value value to set the Attribute11
     */
    public void setAttribute11(String value) {
        setAttributeInternal(ATTRIBUTE11, value);
    }

    /**
     * Gets the attribute value for Attribute12, using the alias name Attribute12.
     * @return the Attribute12
     */
    public String getAttribute12() {
        return (String)getAttributeInternal(ATTRIBUTE12);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute12.
     * @param value value to set the Attribute12
     */
    public void setAttribute12(String value) {
        setAttributeInternal(ATTRIBUTE12, value);
    }

    /**
     * Gets the attribute value for Attribute13, using the alias name Attribute13.
     * @return the Attribute13
     */
    public String getAttribute13() {
        return (String)getAttributeInternal(ATTRIBUTE13);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute13.
     * @param value value to set the Attribute13
     */
    public void setAttribute13(String value) {
        setAttributeInternal(ATTRIBUTE13, value);
    }

    /**
     * Gets the attribute value for Attribute14, using the alias name Attribute14.
     * @return the Attribute14
     */
    public String getAttribute14() {
        return (String)getAttributeInternal(ATTRIBUTE14);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute14.
     * @param value value to set the Attribute14
     */
    public void setAttribute14(String value) {
        setAttributeInternal(ATTRIBUTE14, value);
    }

    /**
     * Gets the attribute value for Attribute15, using the alias name Attribute15.
     * @return the Attribute15
     */
    public String getAttribute15() {
        return (String)getAttributeInternal(ATTRIBUTE15);
    }

    /**
     * Sets <code>value</code> as the attribute value for Attribute15.
     * @param value value to set the Attribute15
     */
    public void setAttribute15(String value) {
        setAttributeInternal(ATTRIBUTE15, value);
    }

    /**
     * Gets the attribute value for ExtAttributeCategory, using the alias name ExtAttributeCategory.
     * @return the ExtAttributeCategory
     */
    public String getExtAttributeCategory() {
        return (String)getAttributeInternal(EXTATTRIBUTECATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExtAttributeCategory.
     * @param value value to set the ExtAttributeCategory
     */
    public void setExtAttributeCategory(String value) {
        setAttributeInternal(EXTATTRIBUTECATEGORY, value);
    }

    /**
     * Gets the attribute value for ExtAttribute1, using the alias name ExtAttribute1.
     * @return the ExtAttribute1
     */
    public String getExtAttribute1() {
        return (String)getAttributeInternal(EXTATTRIBUTE1);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExtAttribute1.
     * @param value value to set the ExtAttribute1
     */
    public void setExtAttribute1(String value) {
        setAttributeInternal(EXTATTRIBUTE1, value);
    }

    /**
     * Gets the attribute value for ExtAttribute2, using the alias name ExtAttribute2.
     * @return the ExtAttribute2
     */
    public String getExtAttribute2() {
        return (String)getAttributeInternal(EXTATTRIBUTE2);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExtAttribute2.
     * @param value value to set the ExtAttribute2
     */
    public void setExtAttribute2(String value) {
        setAttributeInternal(EXTATTRIBUTE2, value);
    }

    /**
     * Gets the attribute value for ExtAttribute3, using the alias name ExtAttribute3.
     * @return the ExtAttribute3
     */
    public String getExtAttribute3() {
        return (String)getAttributeInternal(EXTATTRIBUTE3);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExtAttribute3.
     * @param value value to set the ExtAttribute3
     */
    public void setExtAttribute3(String value) {
        setAttributeInternal(EXTATTRIBUTE3, value);
    }

    /**
     * Gets the attribute value for ExtAttribute4, using the alias name ExtAttribute4.
     * @return the ExtAttribute4
     */
    public String getExtAttribute4() {
        return (String)getAttributeInternal(EXTATTRIBUTE4);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExtAttribute4.
     * @param value value to set the ExtAttribute4
     */
    public void setExtAttribute4(String value) {
        setAttributeInternal(EXTATTRIBUTE4, value);
    }

    /**
     * Gets the attribute value for ExtAttribute5, using the alias name ExtAttribute5.
     * @return the ExtAttribute5
     */
    public String getExtAttribute5() {
        return (String)getAttributeInternal(EXTATTRIBUTE5);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExtAttribute5.
     * @param value value to set the ExtAttribute5
     */
    public void setExtAttribute5(String value) {
        setAttributeInternal(EXTATTRIBUTE5, value);
    }

    /**
     * Gets the attribute value for ExtAttribute6, using the alias name ExtAttribute6.
     * @return the ExtAttribute6
     */
    public String getExtAttribute6() {
        return (String)getAttributeInternal(EXTATTRIBUTE6);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExtAttribute6.
     * @param value value to set the ExtAttribute6
     */
    public void setExtAttribute6(String value) {
        setAttributeInternal(EXTATTRIBUTE6, value);
    }

    /**
     * Gets the attribute value for ExtAttribute7, using the alias name ExtAttribute7.
     * @return the ExtAttribute7
     */
    public String getExtAttribute7() {
        return (String)getAttributeInternal(EXTATTRIBUTE7);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExtAttribute7.
     * @param value value to set the ExtAttribute7
     */
    public void setExtAttribute7(String value) {
        setAttributeInternal(EXTATTRIBUTE7, value);
    }

    /**
     * Gets the attribute value for ExtAttribute8, using the alias name ExtAttribute8.
     * @return the ExtAttribute8
     */
    public String getExtAttribute8() {
        return (String)getAttributeInternal(EXTATTRIBUTE8);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExtAttribute8.
     * @param value value to set the ExtAttribute8
     */
    public void setExtAttribute8(String value) {
        setAttributeInternal(EXTATTRIBUTE8, value);
    }

    /**
     * Gets the attribute value for ExtAttribute9, using the alias name ExtAttribute9.
     * @return the ExtAttribute9
     */
    public String getExtAttribute9() {
        return (String)getAttributeInternal(EXTATTRIBUTE9);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExtAttribute9.
     * @param value value to set the ExtAttribute9
     */
    public void setExtAttribute9(String value) {
        setAttributeInternal(EXTATTRIBUTE9, value);
    }

    /**
     * Gets the attribute value for ExtAttribute10, using the alias name ExtAttribute10.
     * @return the ExtAttribute10
     */
    public String getExtAttribute10() {
        return (String)getAttributeInternal(EXTATTRIBUTE10);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExtAttribute10.
     * @param value value to set the ExtAttribute10
     */
    public void setExtAttribute10(String value) {
        setAttributeInternal(EXTATTRIBUTE10, value);
    }

    /**
     * Gets the attribute value for ExtAttribute11, using the alias name ExtAttribute11.
     * @return the ExtAttribute11
     */
    public String getExtAttribute11() {
        return (String)getAttributeInternal(EXTATTRIBUTE11);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExtAttribute11.
     * @param value value to set the ExtAttribute11
     */
    public void setExtAttribute11(String value) {
        setAttributeInternal(EXTATTRIBUTE11, value);
    }

    /**
     * Gets the attribute value for ExtAttribute12, using the alias name ExtAttribute12.
     * @return the ExtAttribute12
     */
    public String getExtAttribute12() {
        return (String)getAttributeInternal(EXTATTRIBUTE12);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExtAttribute12.
     * @param value value to set the ExtAttribute12
     */
    public void setExtAttribute12(String value) {
        setAttributeInternal(EXTATTRIBUTE12, value);
    }

    /**
     * Gets the attribute value for ExtAttribute13, using the alias name ExtAttribute13.
     * @return the ExtAttribute13
     */
    public String getExtAttribute13() {
        return (String)getAttributeInternal(EXTATTRIBUTE13);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExtAttribute13.
     * @param value value to set the ExtAttribute13
     */
    public void setExtAttribute13(String value) {
        setAttributeInternal(EXTATTRIBUTE13, value);
    }

    /**
     * Gets the attribute value for ExtAttribute14, using the alias name ExtAttribute14.
     * @return the ExtAttribute14
     */
    public String getExtAttribute14() {
        return (String)getAttributeInternal(EXTATTRIBUTE14);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExtAttribute14.
     * @param value value to set the ExtAttribute14
     */
    public void setExtAttribute14(String value) {
        setAttributeInternal(EXTATTRIBUTE14, value);
    }

    /**
     * Gets the attribute value for ExtAttribute15, using the alias name ExtAttribute15.
     * @return the ExtAttribute15
     */
    public String getExtAttribute15() {
        return (String)getAttributeInternal(EXTATTRIBUTE15);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExtAttribute15.
     * @param value value to set the ExtAttribute15
     */
    public void setExtAttribute15(String value) {
        setAttributeInternal(EXTATTRIBUTE15, value);
    }

    /**
     * Gets the attribute value for ParentPropertyId, using the alias name ParentPropertyId.
     * @return the ParentPropertyId
     */
    public Number getParentPropertyId() {
        return (Number) getAttributeInternal(PARENTPROPERTYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParentPropertyId.
     * @param value value to set the ParentPropertyId
     */
    public void setParentPropertyId(Number value) {
        setAttributeInternal(PARENTPROPERTYID, value);
    }

    /**
     * Gets the attribute value for TypeId, using the alias name TypeId.
     * @return the TypeId
     */
    public Number getTypeId() {
        return (Number) getAttributeInternal(TYPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for TypeId.
     * @param value value to set the TypeId
     */
    public void setTypeId(Number value) {
        setAttributeInternal(TYPEID, value);
    }

    /**
     * Gets the attribute value for ParentTypeId, using the alias name ParentTypeId.
     * @return the ParentTypeId
     */
    public Number getParentTypeId() {
        return (Number) getAttributeInternal(PARENTTYPEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ParentTypeId.
     * @param value value to set the ParentTypeId
     */
    public void setParentTypeId(Number value) {
        setAttributeInternal(PARENTTYPEID, value);
    }


    /**
     * Gets the attribute value for PropertyPrice, using the alias name PropertyPrice.
     * @return the value of PropertyPrice
     */
    public Number getPropertyPrice() {
        return (Number) getAttributeInternal(PROPERTYPRICE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PropertyPrice.
     * @param value value to set the PropertyPrice
     */
    public void setPropertyPrice(Number value) {
        setAttributeInternal(PROPERTYPRICE, value);
    }

    /**
     * Gets the attribute value for PropertyCode, using the alias name PropertyCode.
     * @return the value of PropertyCode
     */
    public String getPropertyCode() {
        return (String) getAttributeInternal(PROPERTYCODE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PropertyCode.
     * @param value value to set the PropertyCode
     */
    public void setPropertyCode(String value) {
        setAttributeInternal(PROPERTYCODE, value);
    }

    /**
     * Gets the attribute value for PropertyActivity, using the alias name PropertyActivity.
     * @return the value of PropertyActivity
     */
    public String getPropertyActivity() {
        return (String) getAttributeInternal(PROPERTYACTIVITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PropertyActivity.
     * @param value value to set the PropertyActivity
     */
    public void setPropertyActivity(String value) {
        setAttributeInternal(PROPERTYACTIVITY, value);
    }

    /**
     * Gets the attribute value for PropertyPattern, using the alias name PropertyPattern.
     * @return the value of PropertyPattern
     */
    public String getPropertyPattern() {
        return (String) getAttributeInternal(PROPERTYPATTERN);
    }

    /**
     * Sets <code>value</code> as the attribute value for PropertyPattern.
     * @param value value to set the PropertyPattern
     */
    public void setPropertyPattern(String value) {
        setAttributeInternal(PROPERTYPATTERN, value);
    }

    /**
     * Gets the attribute value for Status, using the alias name Status.
     * @return the value of Status
     */
    public String getStatus() {
        return (String) getAttributeInternal(STATUS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Status.
     * @param value value to set the Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }

    /**
     * Gets the attribute value for ElectricMeter, using the alias name ElectricMeter.
     * @return the value of ElectricMeter
     */
    public String getElectricMeter() {
        return (String) getAttributeInternal(ELECTRICMETER);
    }

    /**
     * Sets <code>value</code> as the attribute value for ElectricMeter.
     * @param value value to set the ElectricMeter
     */
    public void setElectricMeter(String value) {
        setAttributeInternal(ELECTRICMETER, value);
    }

    /**
     * Gets the attribute value for WaterMeter, using the alias name WaterMeter.
     * @return the value of WaterMeter
     */
    public String getWaterMeter() {
        return (String) getAttributeInternal(WATERMETER);
    }

    /**
     * Sets <code>value</code> as the attribute value for WaterMeter.
     * @param value value to set the WaterMeter
     */
    public void setWaterMeter(String value) {
        setAttributeInternal(WATERMETER, value);
    }

    /**
     * Gets the attribute value for EstimatedDeliveryDate, using the alias name EstimatedDeliveryDate.
     * @return the value of EstimatedDeliveryDate
     */
    public Date getEstimatedDeliveryDate() {
        return (Date) getAttributeInternal(ESTIMATEDDELIVERYDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EstimatedDeliveryDate.
     * @param value value to set the EstimatedDeliveryDate
     */
    public void setEstimatedDeliveryDate(Date value) {
        setAttributeInternal(ESTIMATEDDELIVERYDATE, value);
    }

    /**
     * Gets the attribute value for FurnishedFlag, using the alias name FurnishedFlag.
     * @return the value of FurnishedFlag
     */
    public String getFurnishedFlag() {
        return (String) getAttributeInternal(FURNISHEDFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for FurnishedFlag.
     * @param value value to set the FurnishedFlag
     */
    public void setFurnishedFlag(String value) {
        setAttributeInternal(FURNISHEDFLAG, value);
    }

    /**
     * Gets the attribute value for AcFlag, using the alias name AcFlag.
     * @return the value of AcFlag
     */
    public String getAcFlag() {
        return (String) getAttributeInternal(ACFLAG);
    }

    /**
     * Sets <code>value</code> as the attribute value for AcFlag.
     * @param value value to set the AcFlag
     */
    public void setAcFlag(String value) {
        setAttributeInternal(ACFLAG, value);
    }

    /**
     * Gets the attribute value for BuildingId, using the alias name BuildingId.
     * @return the value of BuildingId
     */
    public Number getBuildingId() {
        return (Number) getAttributeInternal(BUILDINGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for BuildingId.
     * @param value value to set the BuildingId
     */
    public void setBuildingId(Number value) {
        setAttributeInternal(BUILDINGID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }


    /**
     * @param propertyId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number propertyId) {
        return new Key(new Object[] { propertyId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        SequenceImpl seq =
            new SequenceImpl("XXMA.XXMA_REAL_ESTATE_PROPERTY_SEQ", getDBTransaction());
        setPropertyId(seq.getSequenceNumber());
        setCreatedBy(new Number(1));
        setLastUpdatedBy(new Number(1));
        setLastUpdateLogin(new Number(1));
        setAttribute10("XXMA_REAL_ESTATE_PROPERTY");
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
